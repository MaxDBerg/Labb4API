// <auto-generated />
using Hobbies.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hobbies.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230601105614_ConnectedInterestandPerson")]
    partial class ConnectedInterestandPerson
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hobbies.Models.Interest", b =>
                {
                    b.Property<int>("InterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestID");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            Description = "Fotboll"
                        },
                        new
                        {
                            InterestID = 2,
                            Description = "Golf"
                        },
                        new
                        {
                            InterestID = 3,
                            Description = "Tennis"
                        },
                        new
                        {
                            InterestID = 4,
                            Description = "Bordtennis"
                        });
                });

            modelBuilder.Entity("Hobbies.Models.Link", b =>
                {
                    b.Property<int>("LinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkID"));

                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<string>("LinkURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("LinkID");

                    b.HasIndex("InterestID");

                    b.HasIndex("PersonID");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Hobbies.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Email = "Peter.Larsson@gmail.com",
                            Name = "Peter Larsson",
                            Phone = "873298479"
                        },
                        new
                        {
                            PersonID = 2,
                            Email = "Lars.Petersson@gmail.com",
                            Name = "Lars Petersson",
                            Phone = "873298479"
                        },
                        new
                        {
                            PersonID = 3,
                            Email = "Maja.Larsson@gmail.com",
                            Name = "Maja Larsson",
                            Phone = "873298479"
                        },
                        new
                        {
                            PersonID = 4,
                            Email = "Filip.Majasson@gmail.com",
                            Name = "Filip Majasson",
                            Phone = "873298479"
                        });
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.Property<int>("InterestsInterestID")
                        .HasColumnType("int");

                    b.Property<int>("PersonsPersonID")
                        .HasColumnType("int");

                    b.HasKey("InterestsInterestID", "PersonsPersonID");

                    b.HasIndex("PersonsPersonID");

                    b.ToTable("InterestPerson");

                    b.HasData(
                        new
                        {
                            InterestsInterestID = 1,
                            PersonsPersonID = 1
                        },
                        new
                        {
                            InterestsInterestID = 2,
                            PersonsPersonID = 1
                        },
                        new
                        {
                            InterestsInterestID = 3,
                            PersonsPersonID = 2
                        },
                        new
                        {
                            InterestsInterestID = 1,
                            PersonsPersonID = 3
                        },
                        new
                        {
                            InterestsInterestID = 4,
                            PersonsPersonID = 4
                        });
                });

            modelBuilder.Entity("Hobbies.Models.Link", b =>
                {
                    b.HasOne("Hobbies.Models.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hobbies.Models.Person", "Person")
                        .WithMany("Links")
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.HasOne("Hobbies.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("InterestsInterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hobbies.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsPersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hobbies.Models.Interest", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("Hobbies.Models.Person", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
